options:
  cors: true
actions:
  action: ./actions/action.js
  action1: ./actions/action1.js
  action2: ./actions/action2.js
  action3: ./actions/action3.js
  action4: ./actions/action4.js
  action5: ./actions/action5.js
  action6: ./actions/action6.js
  action7: ./actions/action7.js
  action8: ./actions/action8.js
  action9: ./actions/action9.js
  action10: ./actions/action10.js
  action11: ./actions/action11.js
  action12: ./actions/action12.js
  action13: ./actions/action13.js
  action14: ./actions/action14.js
  action15: ./actions/action15.js
  action16: ./actions/action16.js
tasks:
  task:
    schedule: cron(5 8 ? * 0)
    action: dropbox_content/oauthCallback
    accounts: {}
    monitor:
      action: dropbox_content/oauthCallback
      accounts: {}
      trackBy: ''
      array: ''
      input:
        code: '""'
  task1:
    schedule: cron(5 8 ? * 0)
    action: mongodb/update
    accounts: {}
    monitor:
      action: mongodb/update
      accounts: {}
      trackBy: ''
      array: ''
      input:
        query: {}
        update: {}
        collection: '""'
  task2:
    schedule: cron(5 8 ? * 0)
    action: fileserver/serve
    accounts: {}
    monitor:
      action: fileserver/serve
      accounts: {}
      trackBy: ''
      array: ''
      input:
        filename: '""'
  task3:
    schedule: cron(5 8 ? * 0)
    action: smtp/send
    accounts: {}
    monitor:
      action: smtp/send
      accounts: {}
      trackBy: ''
      array: accepted
      input:
        to:
          - '""'
        cc: []
        bcc: []
        attachments: []
        envelope: {}
        from: '""'
  task4:
    schedule: cron(5 8 ? * 0)
    action: http/request
    accounts: {}
    monitor:
      action: http/request
      accounts: {}
      trackBy: ''
      array: ''
      input:
        query: {}
        headers: {}
  task5:
    schedule: cron(5 8 ? * 0)
    action: mandrillapp/webhooks.add.json.post
    accounts: {}
    monitor:
      action: mandrillapp/webhooks.add.json.post
      accounts: {}
      trackBy: ''
      array: events
      input:
        body:
          description: '""'
  task6:
    schedule: cron(5 8 ? * 0)
    action: circleci/projects.get
    accounts: {}
    monitor:
      action: circleci/projects.get
      accounts: {}
      trackBy: vcs_url
  task7:
    schedule: cron(5 8 ? * 0)
    action: postmark/server.get
    accounts: {}
    monitor:
      action: postmark/server.get
      accounts: {}
      trackBy: ''
      array: ''
      input:
        Content-Type: '""'
        Accept: '""'
  task8:
    schedule: cron(5 8 ? * 0)
    action: imap/fetch
    accounts: {}
    monitor:
      action: imap/fetch
      accounts: {}
      trackBy: attributes
      input:
        messages:
          - '""'
  task9:
    schedule: cron(5 8 ? * 0)
    action: n_auth/nauth.post
    accounts: {}
    monitor:
      action: n_auth/nauth.post
      accounts: {}
      trackBy: ''
      array: ''
      input:
        msg: '""'
  task10:
    schedule: cron(5 8 ? * 0)
    action: appveyor/getProjects
    accounts: {}
    monitor:
      action: appveyor/getProjects
      accounts: {}
      trackBy: ''
  task11:
    schedule: cron(5 8 ? * 0)
    action: stoplight/versions.versionId.export.format.get
    accounts: {}
    monitor:
      action: stoplight/versions.versionId.export.format.get
      accounts: {}
      trackBy: ''
      array: ''
      input:
        versionId: '""'
        format: '""'
  task12:
    schedule: cron(5 8 ? * 0)
    action: extendsclass_json_storage/bin.id.get
    accounts: {}
    monitor:
      action: extendsclass_json_storage/bin.id.get
      accounts: {}
      trackBy: ''
      array: ''
      input:
        id: '""'
  task13:
    schedule: cron(5 8 ? * 0)
    action: apache_qakka/getMessageData
    accounts: {}
    monitor:
      action: apache_qakka/getMessageData
      accounts: {}
      trackBy: sendingRegion
      array: queueMessages
      input:
        queueName: '""'
        queueMessageId: '""'
  task14:
    schedule: cron(5 8 ? * 0)
    action: box_authorization/authorize
    accounts: {}
    monitor:
      action: box_authorization/authorize
      accounts: {}
      trackBy: ''
      array: ''
      input:
        response_type: '""'
        client_id: '""'
        redirect_uri: '""'
        state: '""'
  task15:
    schedule: cron(5 8 ? * 0)
    action: github/authorizations.authorization_id.get
    accounts: {}
    monitor:
      action: github/authorizations.authorization_id.get
      accounts: {}
      trackBy: ''
      array: scopes
      input:
        authorization_id: 32
  task16:
    schedule: cron(5 8 ? * 0)
    action: swagger_generator/getServerOptions
    accounts: {}
    monitor:
      action: swagger_generator/getServerOptions
      accounts: {}
      trackBy: ''
      array: ''
      input:
        framework: '""'
paths:
  /paths0:
    get:
      action: dropbox_content/oauthCallback
      accounts: {}
  /paths1:
    get:
      action: mongodb/update
      accounts: {}
  /paths2:
    get:
      action: fileserver/serve
      accounts: {}
  /paths3:
    get:
      action: smtp/send
      accounts: {}
  /paths4:
    get:
      action: http/request
      accounts: {}
  /paths5:
    get:
      action: mandrillapp/webhooks.add.json.post
      accounts: {}
  /paths6:
    get:
      action: circleci/projects.get
      accounts: {}
  /paths7:
    get:
      action: postmark/server.get
      accounts: {}
  /paths8:
    get:
      action: imap/fetch
      accounts: {}
  /paths9:
    get:
      action: n_auth/nauth.post
      accounts: {}
  /paths10:
    get:
      action: appveyor/getProjects
      accounts: {}
  /paths11:
    get:
      action: stoplight/versions.versionId.export.format.get
      accounts: {}
  /paths12:
    get:
      action: extendsclass_json_storage/bin.id.get
      accounts: {}
  /paths13:
    get:
      action: apache_qakka/getMessageData
      accounts: {}
  /paths14:
    get:
      action: box_authorization/authorize
      accounts: {}
  /paths15:
    get:
      action: swagger_generator/getServerOptions
      accounts: {}
  /paths16:
    get:
      action: github/authorizations.authorization_id.get
      accounts: {}
tests:
  test:
    action: dropbox_content/oauthCallback
    accounts: {}
    input:
      code: '""'
  test1:
    action: mongodb/update
    accounts: {}
    input:
      query: {}
      update: {}
      collection: '""'
  test2:
    action: fileserver/serve
    accounts: {}
    input:
      filename: '""'
  test3:
    action: smtp/send
    accounts: {}
    input:
      to:
        - '""'
      cc: []
      bcc: []
      attachments: []
      envelope: {}
      from: '""'
  test4:
    action: http/request
    accounts: {}
    input:
      query: {}
      headers: {}
  test5:
    action: mandrillapp/webhooks.add.json.post
    accounts: {}
    input:
      body:
        description: '""'
  test6:
    action: circleci/projects.get
    accounts: {}
  test7:
    action: postmark/server.get
    accounts: {}
    input:
      Content-Type: '""'
      Accept: '""'
  test8:
    action: imap/fetch
    accounts: {}
    input:
      messages:
        - '""'
  test9:
    action: n_auth/nauth.post
    accounts: {}
    input:
      msg: '""'
  test10:
    action: appveyor/getProjects
    accounts: {}
  test11:
    action: stoplight/versions.versionId.export.format.get
    accounts: {}
    input:
      versionId: '""'
      format: '""'
  test12:
    action: extendsclass_json_storage/bin.id.get
    accounts: {}
    input:
      id: '""'
  test13:
    action: apache_qakka/getMessageData
    accounts: {}
    input:
      queueName: '""'
      queueMessageId: '""'
  test14:
    action: box_authorization/authorize
    accounts: {}
    input:
      response_type: '""'
      client_id: '""'
      redirect_uri: '""'
      state: '""'
  test15:
    action: swagger_generator/getServerOptions
    accounts: {}
    input:
      framework: '""'
  test16:
    action: github/authorizations.authorization_id.get
    accounts: {}
    input:
      authorization_id: 32
